trigger:
  batch: true
  branches:
    include:
    - master
    - develop
    - feature/*
    - bugfix/*
    - release/*
    - hotfix/*
  paths:
    include:
    - 'src/*'
    - 'tests/*'
    exclude:
    - '.azuredevops/*'

pr:
  branches:
    include:
    - develop
  paths:
    exclude:
    - '.azuredevops/*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  coberturaOutputFormat: '/p:CoverletOutputFormat=cobertura'
  coverageDirectory: '$(Build.ArtifactStagingDirectory)/coverage/'

stages:
  - stage: CalculateVersionStage
    displayName: 'Calculate Version'
    jobs:
      - job: CalculateVersion
        displayName: 'Calculate version number using GitVersion'
        steps:
          - checkout: self
            fetchDepth: 0
            clean: true

          - task: UseDotNet@2
            displayName: 'Use .Net 8.0'
            inputs:
              packageType: 'sdk'
              version: '8.x'

          - task: gitversion/setup@0
            displayName: 'Install GitVersion'
            inputs:
              versionSpec: '5.x'

          - task: gitversion/execute@0
            displayName: 'Use GitVersion'
            name: Version # the step MUST be named to access its output variables in another stage.

          - script: |
              echo "##vso[task.setvariable variable=NuGetVersion]$(Version.NuGetVersion)"
            displayName: 'Set NuGetVersion variable'

  - stage: Build
    displayName: 'Build Angular and .NET Projects'
    dependsOn: CalculateVersionStage
    jobs:
    - job: Build
      displayName: 'Build Angular and .NET Projects'

      steps:
      - checkout: self
        fetchDepth: 0
        clean: true

      - task: NodeTool@0
        displayName: 'Install Node.js 22.x'
        inputs:
          versionSpec: '22.x'
          checkLatest: true

      - script: |
          npm install -g @angular/cli
        displayName: 'Install Angular CLI'

      - task: Npm@1
        inputs:
          command: 'install'
          workingDir: 'src/aiglusoft.iam.client'
          verbose: true
          customRegistry: 'useFeed'
          customFeed: 'aiglusoft_npm_packages'
        displayName: 'Install Angular Dependencies'

      - script: |
          cd src/aiglusoft.iam.client
          ng test --watch=false --browsers=ChromeHeadless --code-coverage
        displayName: 'Run Angular Unit Tests and Generate Coverage'
        continueOnError: true

      # - task: PublishCodeCoverageResults@1
      #   displayName: 'Publish Angular Code Coverage Results'
      #   inputs:
      #     codeCoverageTool: 'Cobertura'
      #     summaryFileLocation: 'src/aiglusoft.iam.client/coverage/aiglusoft.iam.client/coverage-summary.json'
      #     reportDirectory: 'src/aiglusoft.iam.client/coverage/aiglusoft.iam.client'
      #     failIfCoverageEmpty: true
      #   continueOnError: true

      - script: |
          cd src/aiglusoft.iam.client
          ng build --output-path=src/aiglusoft.iam.client/dist
        displayName: 'Build Angular Project and Copy to dist'

      - template: templates/dotnet-steps.yml
        parameters:
          solution: ${{ variables.solution }}
          buildConfiguration: ${{ variables.buildConfiguration }}
          coberturaOutputFormat: ${{ variables.coberturaOutputFormat }}
          coverageDirectory: ${{ variables.coverageDirectory }}

      # Publish .NET Build Artifacts only for release/* branches
      - task: PublishBuildArtifacts@1
        displayName: 'Publish .NET Build Artifacts'
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'dotnet-app'
          publishLocation: 'Container'

      # Publish Angular artifact only for release/* branches
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Angular Build Artifacts'
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
        inputs:
          pathToPublish: 'src/aiglusoft.iam.client/dist'
          artifactName: 'angular-app'
          publishLocation: 'Container'
